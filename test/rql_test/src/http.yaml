desc: Tests r.http terms using the web service httpbin.org (https://github.com/kennethreitz/bttpbin)
tests:
    - def: tbl = r.table('http')

    # Test headers
    - py: |
          r.http('httpbin.org/get').
           .pluck( {'args':True, 'headers':{'Accept-Encoding':True} } )
      ot: {'args':{},'headers':{'Accept-Encoding':'deflate=1;gzip=0.5'} }

    - py: |
          r.http('httpbin.org/headers', header={'Test':'entry','Disregard':'this'})
           .pluck({'headers':{'Test':True,'Disregard':True}})
      ot: {'headers':{'Test':'entry','Disregard':'this'} }

    # Test URL params
    - py: r.http('httpbin.org/get', params={'fake':123,'things':'stuff','nil':None}).pluck('args')
      ot: {'args':{'fake':'123','things':'stuff','nil':''}}

    # Test HEAD
    - py: r.http('httpbin.org/get', method='HEAD', result_format='text')
      ot: ''
    - py: r.http('httpbin.org/get', method='HEAD')
      ot: None

    # Test POST
    # TODO: test POST with fields (data = dict)
    - py: |
          r.http('httpbin.org/post',
                 method='POST',
                 data='"things"',
                 header={'Content-Type':'application/json'})
           .pluck({'data':True,'json':True,'headers':{'Content-Type':True}})
      ot: {'data':'"things"','json':'things','headers':{'Content-Type':'application/json'}}

    # Test PUT
    # TODO: test PUT with all usable types
    - py: r.http('httpbin.org/put',data='things',method='PUT')
    - py: r.http('httpbin.org/put',data={'stuff':'data'},method='PUT')

    # Test PATCH

    # Test DELETE
    - py: r.http('httpbin.org/delete', method='DELETE')['url']
      ot: 'http://httpbin.org/delete'

    # TODO: Test HTTP error status codes

    # Fail to parse json response
    - py: r.http('httpbin.org/html', result_format='json')
      ot: err( 'RqlRuntimeError', 'Failed to parse json response' )

    # Forced gzip response
    - cd: r.http('httpbin.org/gzip')['gzipped']
      ot: True

    # Redirects
    - py: r.http('httpbin.org/redirect/2')
      ot: err( 'RqlRuntimeError', 'HTTP status code 302.' )

    - py: r.http('httpbin.org/redirect/2', redirects=1)
      ot: err( 'RqlRuntimeError', 'Number of redirects hit maximum amount.' )

    - py: r.http('httpbin.org/redirect/2', redirects=2)['headers']['Host']
      ot: 'httpbin.org'

    # Test basic authentication
    - py: |
          r.http("httpbin.org/basic-auth/azure/hunter2",
                 auth={'type':'basic','user':'azure','pass':'hunter2'},
                 result_format='json')
      ot: {'authenticated':True,'user':'azure'}

    - py: |
          r.http("httpbin.org/basic-auth/azure/hunter2",
                 auth={'type':'basic','user':'fake','pass':'hunter2'})
      ot: err( 'RqlRuntimeError', 'HTTP status code 401.' )

    - py: |
          r.http("httpbin.org/basic-auth/azure/hunter2",
                 auth={'type':'basic','user':'azure','pass':'fake'})
      ot: err( 'RqlRuntimeError', 'HTTP status code 401.' )

    # TODO: looks like this causes a 500 error on the server
    - py: |
          r.http("httpbin.org/basic-auth/azure/hunter2",
                 auth={'type':'digest','user':'azure','pass':'hunter2'})
      ot: err( 'RqlRuntimeError', 'HTTP status code 401.' )

    # Test digest authentication
    - py: |
          r.http("httpbin.org/digest-auth/auth/azure/hunter2",
                 auth={'type':'digest','user':'azure','pass':'hunter2'},
                 result_format='text')
      ot: '{\n  "authenticated": true,\n  "user": "azure"\n}'

    - py: |
          r.http("httpbin.org/digest-auth/auth/azure/hunter2",
                 auth={'type':'digest','user':'fake','pass':'hunter2'})
      ot: err( 'RqlRuntimeError', 'HTTP status code 401.' )

    - py: |
          r.http("httpbin.org/digest-auth/auth/azure/hunter2",
                 auth={'type':'digest','user':'azure','pass':'fake'})
      ot: err( 'RqlRuntimeError', 'HTTP status code 401.' )

    - py: |
          r.http("httpbin.org/digest-auth/auth/azure/hunter2",
                 auth={'type':'basic','user':'azure','pass':'hunter2'})
      ot: err( 'RqlRuntimeError', 'HTTP status code 401.' )

    # Test verify option
    - py: r.http("http://dev.rethinkdb.com/", verify=True, redirects=5)
      ot: err( 'RqlRuntimeError', 'Peer certificate cannot be authenticated with given CA certificates.' )
    - py: r.http("https://dev.rethinkdb.com/", verify=True, redirects=5)
      ot: err( 'RqlRuntimeError', 'Peer certificate cannot be authenticated with given CA certificates.' )
    - py: r.http("http://dev.rethinkdb.com/", verify=False, redirects=5).split()[0]
      ot: '<html>'
    - py: r.http("https://dev.rethinkdb.com/", verify=False, redirects=5).split()[0]
      ot: '<html>'

    # TODO: Optarg parameter errors
